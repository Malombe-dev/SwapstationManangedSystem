{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Riders API\nexport const ridersAPI = {\n  getAll: (page = 1, limit = 10) => api.get(`/riders?page=${page}&limit=${limit}`),\n  getById: id => api.get(`/riders/${id}`),\n  create: data => api.post('/riders', data),\n  update: (id, data) => api.put(`/riders/${id}`, data),\n  delete: id => api.delete(`/riders/${id}`)\n};\n\n// Swaps API\nexport const swapsAPI = {\n  getAll: (page = 1, limit = 10) => api.get(`/swaps?page=${page}&limit=${limit}`),\n  create: data => api.post('/swaps', data),\n  getAnalytics: (startDate, endDate) => api.get(`/swaps/analytics?startDate=${startDate}&endDate=${endDate}`)\n};\n\n// Analytics API\nexport const analyticsAPI = {\n  getDashboard: () => api.get('/analytics/dashboard'),\n  getChurnPredictions: () => api.get('/analytics/churn-predictions'),\n  getSwapForecast: (location, days) => api.get(`/analytics/forecast?location=${location}&days=${days}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","ridersAPI","getAll","page","limit","get","getById","id","data","post","update","put","delete","swapsAPI","getAnalytics","startDate","endDate","analyticsAPI","getDashboard","getChurnPredictions","getSwapForecast","location","days"],"sources":["/home/malombe/Documents/SWapsystem /SWapsystem-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Riders API\nexport const ridersAPI = {\n  getAll: (page = 1, limit = 10) => api.get(`/riders?page=${page}&limit=${limit}`),\n  getById: (id) => api.get(`/riders/${id}`),\n  create: (data) => api.post('/riders', data),\n  update: (id, data) => api.put(`/riders/${id}`, data),\n  delete: (id) => api.delete(`/riders/${id}`),\n};\n\n// Swaps API\nexport const swapsAPI = {\n  getAll: (page = 1, limit = 10) => api.get(`/swaps?page=${page}&limit=${limit}`),\n  create: (data) => api.post('/swaps', data),\n  getAnalytics: (startDate, endDate) => api.get(`/swaps/analytics?startDate=${startDate}&endDate=${endDate}`),\n};\n\n// Analytics API\nexport const analyticsAPI = {\n  getDashboard: () => api.get('/analytics/dashboard'),\n  getChurnPredictions: () => api.get('/analytics/churn-predictions'),\n  getSwapForecast: (location, days) => api.get(`/analytics/forecast?location=${location}&days=${days}`),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,MAAM,EAAEA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAKP,GAAG,CAACQ,GAAG,CAAC,gBAAgBF,IAAI,UAAUC,KAAK,EAAE,CAAC;EAChFE,OAAO,EAAGC,EAAE,IAAKV,GAAG,CAACQ,GAAG,CAAC,WAAWE,EAAE,EAAE,CAAC;EACzCT,MAAM,EAAGU,IAAI,IAAKX,GAAG,CAACY,IAAI,CAAC,SAAS,EAAED,IAAI,CAAC;EAC3CE,MAAM,EAAEA,CAACH,EAAE,EAAEC,IAAI,KAAKX,GAAG,CAACc,GAAG,CAAC,WAAWJ,EAAE,EAAE,EAAEC,IAAI,CAAC;EACpDI,MAAM,EAAGL,EAAE,IAAKV,GAAG,CAACe,MAAM,CAAC,WAAWL,EAAE,EAAE;AAC5C,CAAC;;AAED;AACA,OAAO,MAAMM,QAAQ,GAAG;EACtBX,MAAM,EAAEA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAKP,GAAG,CAACQ,GAAG,CAAC,eAAeF,IAAI,UAAUC,KAAK,EAAE,CAAC;EAC/EN,MAAM,EAAGU,IAAI,IAAKX,GAAG,CAACY,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;EAC1CM,YAAY,EAAEA,CAACC,SAAS,EAAEC,OAAO,KAAKnB,GAAG,CAACQ,GAAG,CAAC,8BAA8BU,SAAS,YAAYC,OAAO,EAAE;AAC5G,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAEA,CAAA,KAAMrB,GAAG,CAACQ,GAAG,CAAC,sBAAsB,CAAC;EACnDc,mBAAmB,EAAEA,CAAA,KAAMtB,GAAG,CAACQ,GAAG,CAAC,8BAA8B,CAAC;EAClEe,eAAe,EAAEA,CAACC,QAAQ,EAAEC,IAAI,KAAKzB,GAAG,CAACQ,GAAG,CAAC,gCAAgCgB,QAAQ,SAASC,IAAI,EAAE;AACtG,CAAC;AAED,eAAezB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}